version: "3.8"

services:

  jupiter:
    image: localhost:8084/jupyter/datascience-notebook
    container_name: asutp_jupyter
    restart: always
    ports:
      - '8889:8888'
    volumes:
      - ./jupyter/work:/home/jovyan/work
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

  prometheus:
    image: localhost:8084/prom/prometheus
    container_name: asutp_prometheus
    restart: always
    ports:
      - '9090:9090'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    container_name: asutp_grafana
    image: localhost:8084/grafana/grafana:latest
    volumes:
      - ./config/grafana.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./data/grafana:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    user: "1000"

  db:
    image: localhost:8084/mariadb:latest
    container_name: asutp_db
    restart: always
#    command: --init-file /docker-entrypoint-initdb.d/init.sql
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/db:/var/lib/mysql
    ports:
      - "6033:3306"
    environment:
      - TZ=Europe/Moscow
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=yes
      - MARIADB_USER=asutp
      - MARIADB_PASSWORD=asutp
      - MARIADB_ROOT_PASSWORD=asutp
    #user: "1000:1000"

  phpmyadmin:
    image: localhost:8084/phpmyadmin/phpmyadmin
    container_name: asutp_phpmyadmin
    links:
      - db
    environment:
      TZ: Europe/Moscow
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - '8082:80'
    depends_on:
      - db

  app_main:
    container_name: asutp_app_main
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: always
    environment:
      DATABASE_PROVIDER: 'mysql'
    volumes:
      - ./storage_example:/storage
      - ./config/pip.conf:/etc/pip.conf
    links:
      - db

  app_web:
    container_name: asutp_app_web
    build:
      context: ./
      dockerfile: ./Dockerfile.web
    restart: always
    volumes:
      - ./config/pip.conf:/etc/pip.conf
    ports:
      - '8500:5000'
    links:
      - db
    depends_on:
      - db

networks:
  events:
    driver: bridge